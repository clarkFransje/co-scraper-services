name: Docker Build And Push

on:
  workflow_run:
    workflows: ["Build and Test"]
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    concurrency: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker images
        run: |
          TAG=${GITHUB_SHA::7}
          
          docker buildx create --use
          
          cd customer-service
          docker buildx build --cache-to=type=local,dest=/tmp/.buildx-cache --cache-from=type=local,src=/tmp/.buildx-cache -t ${{ secrets.AZURE_REGISTRY }}.azurecr.io/customer-service:$TAG -f Dockerfile . --push
          cd ../product-service
          docker buildx build --cache-to=type=local,dest=/tmp/.buildx-cache --cache-from=type=local,src=/tmp/.buildx-cache -t ${{ secrets.AZURE_REGISTRY }}.azurecr.io/product-service:$TAG -f Dockerfile . --push
          cd ../customer-product-service
          docker buildx build --cache-to=type=local,dest=/tmp/.buildx-cache --cache-from=type=local,src=/tmp/.buildx-cache -t ${{ secrets.AZURE_REGISTRY }}.azurecr.io/customer-product-service:$TAG -f Dockerfile . --push
