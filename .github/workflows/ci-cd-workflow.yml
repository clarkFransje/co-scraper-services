name: CI/CD Workflow

on:
  push:
    branches:
      - master

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          - customer-service
          - product-service
          - customer-product-service
          - store-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and test ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          mvn clean install

  build_and_push_docker_images:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: build_and_test

    strategy:
      matrix:
        service:
          - customer-service
          - product-service
          - customer-product-service
          - store-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.AZURE_REGISTRY }} --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Build and push Docker image for ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          docker build -t ${{ secrets.AZURE_REGISTRY }}.azurecr.io/${{ matrix.service }}:${{ github.sha }} .
          docker push ${{ secrets.AZURE_REGISTRY }}.azurecr.io/${{ matrix.service }}:${{ github.sha }}

  deploy_to_kubernetes:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build_and_push_docker_images

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group co-scraper --name co-scraper

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Set Image Tags
        id: vars
        run: echo "TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Update Kubernetes Manifests
        run: |
          TAG=${{ env.TAG }}
          sed -i "s|image: coscraper.azurecr.io/customer-service:.*|image: coscraper.azurecr.io/customer-service:$TAG|" k8s-configs/deployments/customer-deployment.yaml
          sed -i "s|image: coscraper.azurecr.io/product-service:.*|image: coscraper.azurecr.io/product-service:$TAG|" k8s-configs/deployments/product-deployment.yaml
          sed -i "s|image: coscraper.azurecr.io/customer-product-service:.*|image: coscraper.azurecr.io/customer-product-service:$TAG|" k8s-configs/deployments/customer-product-deployment.yaml
          sed -i "s|image: coscraper.azurecr.io/store-service:.*|image: coscraper.azurecr.io/store-service:$TAG|" k8s-configs/deployments/store-deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          for file in k8s-configs/deployments/*.yaml; do
            kubectl apply -f "$file"
          done
          for file in k8s-configs/config-maps/*.yaml; do
            kubectl apply -f "$file"
          done
          for file in k8s-configs/network-policies/*.yaml; do
            kubectl apply -f "$file"
          done
          for file in k8s-configs/services/*.yaml; do
            kubectl apply -f "$file"
          done
          for file in k8s-configs/ingress/*.yaml; do
            kubectl apply -f "$file"
          done
          kubectl apply -f k8s-configs/hpa-services.yaml
